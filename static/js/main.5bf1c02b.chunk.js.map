{"version":3,"sources":["components/ToDoObject.js","components/ToDoList.js","components/TodaysToDoList.js","components/AddToDo.js","components/Menu.js","helperFunctions.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoObject","handleClick","event","props","removeToDoObject","handleCheckboxClick","toggleCheckbox","target","name","checked","className","this","assignement","deadline","done","type","defaultChecked","onClick","React","Component","ToDoList","sortedList","toDoList","sort","a","b","Object","keys","map","key","index","TodaysToDoList","slice","today","AddToDo","state","toDoObject","value","assignementRef","createRef","deadlineRef","handleChange","currentTarget","setState","createToDo","preventDefault","current","console","log","addToDoObject","reset","cancel","onSubmit","ref","onChange","placeholder","Menu","setShowToDoList","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","App","useState","LS","JSON","parse","localStorage","getItem","setToDoList","showAddToDo","setAddToDo","showTodaysToDoList","setShowTodaysToDoList","showToDoList","boolean","find","object","setItem","stringify","getAttribute","filter","item","onClickDay","tileContent","view","datesToAddContentTo","dDate","differenceInCalendarDays","e","data","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bf1c02b.chunk.js","sourcesContent":["import React from 'react'\n\nclass ToDoObject extends React.Component{\n\n  handleClick = (event) =>{\n    this.props.removeToDoObject(event)\n  }\n\n  handleCheckboxClick = (event) => {\n    // console.log(event.target.checked)\n    // console.log(event.target.name)\n    this.props.toggleCheckbox(event.target.name, event.target.checked)\n  }\n\n  render(){\n    return(\n    <div className=\"ToDoObject\" >\n      <p>{this.props.assignement}</p>\n      <p>{this.props.deadline}\n      {this.props.done ? <input type=\"checkbox\" name={this.props.assignement} defaultChecked onClick={this.handleCheckboxClick}/> : <input type=\"checkbox\"  name={this.props.assignement} onClick={this.handleCheckboxClick}/> }\n      <button name={this.props.assignement} deadline={this.props.deadline} onClick={this.handleClick}>delete</button></p>\n    </div>\n    )\n  }\n}\n\nexport default ToDoObject","import React from 'react'\nimport ToDoObject from './ToDoObject'\n\n\n\n\nconst ToDoList = (props) => {\n\nconst sortedList = props.toDoList.sort((a,b) => a.deadline > b.deadline ? 1 : -1 )\n  \n const printList = Object.keys(sortedList).map(key => {\n  return (\n    <ToDoObject\n    deadline={props.toDoList[key].deadline}\n    assignement={props.toDoList[key].assignement}\n    done={props.toDoList[key].done}\n    key={key}\n    index={key}\n    removeToDoObject={props.removeToDoObject}\n     toggleCheckbox={props.toggleCheckbox}\n\n    />\n  )\n})\n\nreturn printList   \n\n}\n\nexport default ToDoList;","import React from 'react'\nimport ToDoObject from './ToDoObject'\n\n\nclass TodaysToDoList extends React.Component{\n\n  render(){\n    const sortedList = this.props.toDoList.sort((a,b) => a.deadline > b.deadline ? 1 : -1 )\n    return(\n      <div>\n        {Object.keys(sortedList).map(key => {\n          if (this.props.toDoList[key].deadline.slice(0,-6) === this.props.today){\n            return (\n              \n            <ToDoObject\n            deadline={this.props.toDoList[key].deadline}\n            assignement={this.props.toDoList[key].assignement}\n            done={this.props.toDoList[key].done}\n            key={key}\n            index={key}\n            removeToDoObject={this.props.removeToDoObject}\n            toggleCheckbox={this.props.toggleCheckbox}\n            />\n            \n            )\n          }else{\n            return ''\n          }\n        })\n        }\n      </div>\n    )\n        \n  }\n}\n\n\n\nexport default TodaysToDoList;\n","import React from 'react'\n\nclass AddToDo extends React.Component{\n\n  state = {\n    toDoObject: {\n    deadline: `${this.props.value + \"T00:00\"}`,\n    assignement: '',\n    done: false\n    }\n  }\n\nassignementRef = React.createRef()\ndeadlineRef = React.createRef()\n\nhandleChange = (event) => {\n  const toDoObject = {...this.state.toDoObject, [event.currentTarget.name]: event.currentTarget.value}\n  this.setState({toDoObject})\n  \n}\n\ncreateToDo = (event) => {\n  event.preventDefault()\n  const ToDoObject = {\n    deadline: this.deadlineRef.current.value,\n    assignement: this.assignementRef.current.value,\n    done: false\n  }\n  console.log(ToDoObject)\n\n  this.props.addToDoObject(event,ToDoObject)\n\n  event.currentTarget.reset()\n  this.props.cancel(event)\n}\n\n  render(){\n  return (\n    <div className=\"addToDo\">\n      <form onSubmit={this.createToDo}>\n        <input name=\"assignement\" ref={this.assignementRef} type=\"text\" onChange={this.handleChange} placeholder=\"Name of To-Do\"></input>\n        <input name=\"deadline\" ref={this.deadlineRef} type=\"datetime-local\" onChange={this.handleChange} value={this.props.value + 'T00:00'} ></input>\n        <button type=\"submit\">Add to do</button>\n        <button onClick={this.props.cancel}>cancel</button>\n      </form>\n    </div>\n  )\n  }\n}\n\nexport default AddToDo","import React from 'react'\n\nconst Menu = (props) => {\n\n  const handleClick = () => {\n    props.setShowToDoList(true)\n  }\n\nreturn (\n  <div>\n    <p>click on a day to add To Do</p>\n    <button onClick={handleClick}>Show all To Do's</button>\n  </div>\n  \n)\n\n}\n\nexport default Menu;","export function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}","import React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { differenceInCalendarDays } from 'date-fns';\nimport ToDoList from '../src/components/ToDoList'\nimport TodaysToDoList from '../src/components/TodaysToDoList'\nimport './App.css';\nimport AddToDo from '../src/components/AddToDo'\nimport Menu from '../src/components/Menu'\nimport { formatDate } from './helperFunctions';\n\n\n//funktion till react-calendar\nconst isSameDay = (a, b) => {\n  return differenceInCalendarDays(a, b) === 0;\n}\n\nconst App = () => {\n\n\n  // finns localstorage, sätt det i state, annars sätt en tom array\n  const reinstateLS = () =>{\n      const LS = JSON.parse(localStorage.getItem('toDoList'))\n      if(LS === null){\n        return []\n      } else {\n        return LS\n      }\n  }\n\nconst [value, onChange] = useState(new Date());\nconst [toDoList, setToDoList] = useState(reinstateLS)\nconst [showAddToDo, setAddToDo] = useState(false)\nconst [showTodaysToDoList, setShowTodaysToDoList] = useState(false)\nconst [showToDoList, setShowToDoList] = useState(false)\n  \nconst tileContent = ({ date, view }) => {\n  const datesToAddContentTo = toDoList.map(key => new Date(key.deadline))\n  // Add class to tiles in month view only\n  if (view === 'month') {\n    // Check if a date React-Calendar wants to check is on the list of dates to add class to\n    if (datesToAddContentTo.find(dDate => isSameDay(dDate, date))) {\n      return '.';\n    }\n  }\n}\n\n    const onClickDay = () => {\n      setAddToDo(true)\n      setShowTodaysToDoList(true)\n      setShowToDoList(false)\n  }\n\n  const removeAddToDo = (e) => {\n    e.preventDefault()\n    if(showAddToDo===true){\n      setAddToDo(false)\n    } \n  }\n\n  const addToDoObject = (event, data) => {\n      event.preventDefault()\n      console.log(event, data)\n      const state = toDoList\n      state.push(data)\n      console.log(state)\n      setToDoList(state)\n      localStorage.setItem(\"toDoList\", JSON.stringify(state))\n  }\n\n  const toggleCheckbox = (name, boolean) => {\n      const state = toDoList\n      const toggleObject = state.find(object => object.assignement === name)\n      toggleObject.done = boolean;\n      setToDoList(state)\n      localStorage.setItem(\"toDoList\", JSON.stringify(state))\n  }\n\n  const removeToDoObject = (event) => {\n      const name = event.target.getAttribute('name')\n      const deadline = event.target.getAttribute('deadline')\n      setToDoList(toDoList.filter(item => item.assignement !== name && item.deadline !== deadline))\n      localStorage.setItem(\"toDoList\", JSON.stringify(toDoList.filter(item => item.assignement !== name && item.deadline !== deadline)))\n  }\n\n  const displayToDoList = (e) => {\n    setShowToDoList(true)\n    setShowTodaysToDoList(false)\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"calendar\">\n      <h2>TO DO-list</h2>\n      <Calendar\n        onClickDay={onClickDay}\n        onChange={onChange}\n        value={value}\n        tileContent={tileContent}\n      />\n      <Menu setShowToDoList={displayToDoList} value=\"tjena\"/>\n      {showAddToDo ?  <AddToDo value={formatDate(value)} cancel={removeAddToDo} addToDoObject={addToDoObject} /> : ''}\n      {showTodaysToDoList ? <TodaysToDoList toDoList={toDoList} today={formatDate(value)} removeToDoObject={removeToDoObject} toggleCheckbox={toggleCheckbox}/> : ''}\n      {showToDoList ? <ToDoList toDoList={toDoList} removeToDoObject={removeToDoObject} toggleCheckbox={toggleCheckbox}/> : ''}\n    </div>\n\n    </div>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}